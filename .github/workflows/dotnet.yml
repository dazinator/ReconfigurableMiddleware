name: 'Build Source Branch'

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'feature/*'
      - 'release/*'        
#  pull_request:
#    branches: [ master, develop ]

env:
  DEPLOY_DOCS: false
  
jobs:
  calculate-variables:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }} # To use an output in another job, you have to map it to a job output.    
      semVerMajor: ${{ steps.gitversion.outputs.major }}
      semVerMinor: ${{ steps.gitversion.outputs.minor }}
      branchName: ${{ steps.gitversion.outputs.branchName }}      
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          # persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, gitversion may fail
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          preferLatestVersion: true
     
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
  dotnet-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: 3.1.x

      - name: Restore dotnet tools
        run: dotnet tool restore

      - name: Apply formatting fixes
        run: dotnet format src

      - name: Check if there are changes
        id: changes
        uses: UnicornGlobal/has-changes-action@v1.0.11

      - name: Configure git safe dir
        run: |
          git config --local --add safe.directory /github/workspace         
      - name: Commit files
        if: steps.changes.outputs.changed == 1
        run: |         
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -a -m 'Automated dotnet-format update
          Co-authored-by: ${{ github.event.comment.user.login }} <${{ github.event.comment.user.id }}+${{ github.event.comment.user.login }}@users.noreply.github.com>'
      
      - name: Push changes
        if: steps.changes.outputs.changed == 1
        #if: steps.command.outputs.command-name && steps.command.outputs.command-arguments == 'format' && steps.format.outputs.has-changes == 'true'
        uses: ad-m/github-push-action@master
        #ad-m/github-push-action@v0.5.0
        with:
          branch: ${{ github.ref }}         
          github_token: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: [calculate-variables] # see https://github.com/GitTools/actions/blob/main/docs/examples/github/gitversion/execute/usage-examples.md#example-7
    env:
      SEMVER: ${{ needs.calculate-variables.outputs.semVer }}

    steps:    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v1      

    #- name: Restore dotnet tools
    #  run: dotnet tool restore 

    #- name: Determine Version
    #  run: dotnet gitversion /l console /output buildserver

    - name: Restore dependencies
      run: dotnet restore src

    - name: Build
      run: dotnet build src --no-restore --configuration Release /p:Version=$SEMVER

    - name: Test
      run: dotnet test src -c Release --no-build --no-restore --verbosity normal

    # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-nuget-registry
    - name: Configure nuget
      run: dotnet nuget add source --username dazinator --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/dazinator/index.json"
    
    - name: Pack nuget
      run: dotnet pack src --no-build --no-restore --configuration Release -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg /p:PackageVersion=$SEMVER

    - name: Push nuget
      run: dotnet nuget push "src/**/*.nupkg" -s github

    # - name: Pack
    #   run: dotnet pack src -c Release --no-build --no-restore -p:PackageVersion=${{ env.GitVersion_SemVer }} --verbosity normal

    # - name: Publish
    #   if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/develop')
    #   run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
  docs:
    name: Deploy docs
    if: ${{ DEPLOY_DOCS == 'true' }}
    needs: [calculate-variables] # see https://github.com/GitTools/actions/blob/main/docs/examples/github/gitversion/execute/usage-examples.md#example-7  
    env:
      SEMVER: ${{ needs.calculate-variables.outputs.semVer }}         
      SEMVER_MAJOR: ${{ needs.calculate-variables.outputs.semVerMajor }}
      SEMVER_MINOR: ${{ needs.calculate-variables.outputs.semVerMinor }}
      BRANCHNAME: ${{ needs.calculate-variables.outputs.branchName }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all commits/branches

      - name: Install Python and pip
        uses: actions/setup-python@v2
        with:
          python-version: 3.x          

      - name: Install required Python packages
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r docs/requirements.txt 
     
      - name: Set Docs Version Alias
        run: |
          if [ "$BRANCHNAME" = "master" ]; then
            echo "DOCSVERSIONALIAS=stable" >> $GITHUB_ENV
          elif [ "$BRANCHNAME" = "develop" ]; then
            echo "DOCSVERSIONALIAS=latest" >> $GITHUB_ENV
          fi

      - name: Publish new stable or latest version of docs to gh-pages branch
        env:
          SITE_URL: https://dazinator.github.io/ReconfigurableMiddleware/ 
       
        run: |
          git config user.name ci-bot
          git config user.email ci-bot@dazinator.io         
          echo "1 ${{ env.DOCSVERSIONALIAS }}"
          echo "2 $SEMVER" 
          echo "3 $SEMVER_MAJOR $SEMVER_MINOR" 
          echo "4 $BRANCHNAME" 
          echo "5 $SITE_URL" 
          echo "deploying site" 
          mike deploy --push --update-aliases $SEMVER_MAJOR.$SEMVER_MINOR ${{ env.DOCSVERSIONALIAS }}
          echo "pushing ${{ env.DOCSVERSIONALIAS }}" 
          mike set-default --push ${{ env.DOCSVERSIONALIAS }}
          # mike deploy --prefix site --push --update-aliases $GITHUB_ENV.GitVersion.Major.$GITHUB_ENV.GitVersion.Minor $GITHUB_ENV.DOCSVERSIONALIAS         
        if: env.DOCSVERSIONALIAS != ''
